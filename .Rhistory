?hist
fivemin_interval_mean <- aggregate( list(steps = read_data$steps), list(interval = read_data$interval), FUN = mean, na.rm = TRUE)
modified_value <- function(steps, interval) {
if (!is.na(steps))
filled <- c(steps)
else filled <- (fivemin_interval_mean[fivemin_interval_mean$interval == interval, "steps"])
return(filled)
# Reproducible Research
# Peer Assessment 1
## Loading and preprocessing the data
```{r loaddata}
unzip(zipfile="repdata-data-activity.zip")
read_data <- read.csv("activity.csv")
```
## What is mean total number of steps taken per day?
```{r}
total_steps <- aggregate(steps ~ date, read_data, sum)
hist(total_steps$steps, col = 'gray', main = paste("Histogram of total number of steps taken per day"), xlab="Number of steps taken")
```
The mean is
```{r}
mean(total_steps$steps)
```
The median is
```{r}
median(total_steps$steps)
```
## What is the average daily activity pattern?
```{r}
fivemin_interval <- aggregate(steps ~ interval, read_data, sum)
plot(fivemin_interval$interval, fivemin_interval$steps, type="l", xlab="Interval", ylab="Number of steps taken",main="Average daily activity pattern")
```
The following 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps
```{r}
fivemin_interval[which.max(fivemin_interval$steps),1]
```
## Imputing missing values
Total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
sum(is.na(read_data$steps))
```
The strategy is to Use the mean value of a 5-minute interval and replace each missing value in that interval
```{r}
fivemin_interval_mean <- aggregate( list(steps = read_data$steps), list(interval = read_data$interval), FUN = mean, na.rm = TRUE)
modified_value <- function(steps, interval) {
if (!is.na(steps))
filled <- c(steps)
else filled <- (fivemin_interval_mean[fivemin_interval_mean$interval == interval, "steps"])
return(filled)
}
modified_data <- read_data
modified_data$steps <- mapply(modified_value, modified_data$steps, modified_data$interval)
```
Draw a histogram of total number of steps taken per day for the modified data
```{r}
modified_total_steps <- aggregate(steps ~ date, modified_data, sum)
hist(modified_total_steps$steps, col = 'green', main = paste("Histogram of total number of steps taken per day for the modified data"), xlab="Number of steps taken")
```
The mean for modified data is
```{r}
mean(modified_total_steps$steps)
```
The median for modified data is
```{r}
median(modified_total_steps$steps)
```
?par
?aes
??aes
??ggplot
?geom_line
??geom_line
??facet_grid
??ggplot
??main
